--- cgroup_namespaces.7-unpatched	2018-06-02 22:33:46.373073286 -0400
+++ cgroup_namespaces.7	2018-06-02 22:34:54.180612462 -0400
@@ -86,11 +86,11 @@
 .BR unshare (1)
 to create a process running a new shell in new cgroup and mount namespaces:
 .PP
-.EX
 .in +4n
+.EX
 # \fBunshare \-Cm bash\fP
-.in
 .EE
+.in
 .PP
 We then inspect the
 .IR /proc/[pid]/cgroup
@@ -101,16 +101,16 @@
 with PID 1), and a process in a sibling cgroup
 .RI ( sub2 ):
 .PP
-.EX
 .in +4n
+.EX
 $ \fBcat /proc/self/cgroup | grep freezer\fP
 7:freezer:/
 $ \fBcat /proc/1/cgroup | grep freezer\fP
 7:freezer:/..
 $ \fBcat /proc/20124/cgroup | grep freezer\fP
 7:freezer:/../sub2
-.in
 .EE
+.in
 .PP
 From the output of the first command,
 we see that the freezer cgroup membership of the new shell
@@ -130,12 +130,12 @@
 .IR /proc/self/mountinfo
 we see the following anomaly:
 .PP
-.EX
 .in +4n
+.EX
 # \fBcat /proc/self/mountinfo | grep freezer\fP
 155 145 0:32 /.. /sys/fs/cgroup/freezer ...
-.in
 .EE
+.in
 .PP
 The fourth field of this line
 .RI ( /.. )
@@ -151,16 +151,16 @@
 We need to remount the freezer cgroup filesystem
 inside this cgroup namespace, after which we see the expected results:
 .PP
-.EX
 .in +4n
+.EX
 # \fBmount \-\-make\-rslave /\fP     # Don't propagate mount events
                             # to other namespaces
 # \fBumount /sys/fs/cgroup/freezer\fP
 # \fBmount \-t cgroup \-o freezer freezer /sys/fs/cgroup/freezer\fP
 # \fBcat /proc/self/mountinfo | grep freezer\fP
 155 145 0:32 / /sys/fs/cgroup/freezer rw,relatime ...
-.in
 .EE
+.in
 .PP
 Use of cgroup namespaces requires a kernel that is configured with the
 .B CONFIG_CGROUPS
