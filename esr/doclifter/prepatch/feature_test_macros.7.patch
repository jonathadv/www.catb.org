--- feature_test_macros.7-unpatched	2018-05-19 13:21:38.906717864 -0400
+++ feature_test_macros.7	2018-05-19 13:24:41.525476775 -0400
@@ -65,12 +65,12 @@
 .PP
 .BI "int acct(const char *" filename );
 .PP
+.RS +4
 .EX
-.in -4n
 Feature Test Macro Requirements for glibc (see
 .BR feature_test_macros (7)):
 .EE
-.in
+.RE
 .PP
 .BR acct ():
 _BSD_SOURCE || (_XOPEN_SOURCE && _XOPEN_SOURCE\ <\ 500)
@@ -86,22 +86,22 @@
 of the following macro
 definitions must be made before including any header files:
 .PP
-.in +4n
+.RS +4
 .EX
 #define _BSD_SOURCE
 #define _XOPEN_SOURCE        /* or any value < 500 */
 .EE
-.in
+.RE
 .PP
 Alternatively, equivalent definitions can be included in the
 compilation command:
 .PP
-.in +4n
+.RS +4
 .EX
 cc \-D_BSD_SOURCE
 cc \-D_XOPEN_SOURCE           # Or any value < 500
 .EE
-.in
+.RE
 .PP
 Note that, as described below,
 .BR "some feature test macros are defined by default" ,
@@ -113,14 +113,14 @@
 feature test macro requirements (this example from
 .BR readahead (2)):
 .PP
-.in +4n
+.RS +4
 .EX
 .B #define _GNU_SOURCE
 .B #include <fcntl.h>
 .PP
 .BI "ssize_t readahead(int " fd ", off64_t *" offset ", size_t " count );
 .EE
-.in
+.RE
 .PP
 This format is employed in cases where only a single
 feature test macro can be used to expose the function
@@ -156,20 +156,20 @@
 with a value of 200112L or greater.
 Where one sees
 .IP
-.in +4n
+.RS +4
 .EX
 _POSIX_C_SOURCE >= 200112L
 .EE
-.in
+.RE
 .IP
 in the feature test macro requirements in the SYNOPSIS of a man page,
 it is implicit that the following has the same effect:
 .IP
-.in +4n
+.RS +4
 .EX
 _XOPEN_SOURCE >= 600
 .EE
-.in
+.RE
 .IP *
 Defining
 .BR _XOPEN_SOURCE
@@ -178,20 +178,20 @@
 with a value of 200809L or greater.
 Where one sees
 .IP
-.in +4n
+.RS +4
 .EX
 _POSIX_C_SOURCE >= 200809L
 .EE
-.in
+.RE
 .IP
 in the feature test macro requirements in the SYNOPSIS of a man page,
 it is implicit that the following has the same effect:
 .IP
-.in +4n
+.RS +4
 .EX
 _XOPEN_SOURCE >= 700
 .EE
-.in
+.RE
 .\" The details in glibc 2.0 are simpler, but combining a
 .\" a description of them with the details in later glibc versions
 .\" would make for a complicated description.
@@ -777,7 +777,7 @@
 The following shell session, on a system with glibc 2.10,
 shows some examples of what we would see:
 .PP
-.in +4n
+.RS +4
 .EX
 $ \fBcc ftm.c\fP
 $ \fB./a.out\fP
@@ -804,7 +804,7 @@
 _ATFILE_SOURCE defined
 _GNU_SOURCE defined
 .EE
-.in
+.RE
 .SS Program source
 \&
 .EX
