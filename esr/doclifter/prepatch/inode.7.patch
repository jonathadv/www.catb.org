--- inode.7-unpatched	2018-05-18 16:19:54.241210955 -0400
+++ inode.7	2018-05-18 16:21:34.764527793 -0400
@@ -238,7 +238,7 @@
 .IR "file permission bits" .
 .PP
 The following mask values are defined for the file type:
-.in +4n
+.RS
 .TS
 lB l l.
 S_IFMT	0170000	bit mask for the file type bit field
@@ -251,18 +251,18 @@
 S_IFCHR	0020000	character device
 S_IFIFO	0010000	FIFO
 .TE
-.in
+.RE
 .PP
 Thus, to test for a regular file (for example), one could write:
 .PP
-.in +4n
+.RS
 .EX
 stat(pathname, &sb);
 if ((sb.st_mode & S_IFMT) == S_IFREG) {
     /* Handle regular file */
 }
 .EE
-.in
+.RE
 .PP
 Because tests of the above form are common, additional
 macros are defined by POSIX to allow the test of the file type in
@@ -294,14 +294,14 @@
 .PP
 The preceding code snippet could thus be rewritten as:
 .PP
-.in +4n
+.RS
 .EX
 stat(pathname, &sb);
 if (S_ISREG(sb.st_mode)) {
     /* Handle regular file */
 }
 .EE
-.in
+.RE
 .PP
 The definitions of most of the above file type test macros
 are provided if any of the following feature test macros is defined:
@@ -348,7 +348,7 @@
 the file mode component of the
 .I st_mode
 field:
-.in +4n
+.RS
 .TS
 lB l l.
 S_ISUID	  04000	set-user-ID bit
@@ -372,7 +372,7 @@
 S_IWOTH	  00002	others have write permission
 S_IXOTH	  00001	others have execute permission
 .TE
-.in
+.RE
 .PP
 The set-group-ID bit
 .RB ( S_ISGID )
